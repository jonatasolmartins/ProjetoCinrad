// <auto-generated />
using System;
using Cinrad.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Cinrad.Infrastructure.Migrations.Cinrad
{
    [DbContext(typeof(CinradContext))]
    [Migration("20190328194821_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Cinrad.Core.Entity.AgendaProducao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.HasKey("Id");

                    b.ToTable("AgendaProducao");
                });

            modelBuilder.Entity("Cinrad.Core.Entity.ApresentacaoProduto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.HasKey("Id");

                    b.ToTable("ApresentacaoProduto");
                });

            modelBuilder.Entity("Cinrad.Core.Entity.Cliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasColumnName("Cnpj")
                        .HasMaxLength(14);

                    b.Property<string>("NomeFantasia")
                        .HasColumnName("NomeFantasia")
                        .HasMaxLength(100);

                    b.Property<string>("RazaoSocial")
                        .IsRequired()
                        .HasColumnName("RazaoSocial")
                        .HasMaxLength(100);

                    b.Property<string>("Site")
                        .HasColumnName("Site")
                        .HasMaxLength(100);

                    b.Property<string>("Telefone")
                        .HasColumnName("Telefone")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("Cinrad.Core.Entity.ClienteTransportadora", b =>
                {
                    b.Property<Guid>("ClienteId");

                    b.Property<Guid>("TransportadoraId");

                    b.HasKey("ClienteId", "TransportadoraId");

                    b.HasIndex("TransportadoraId");

                    b.ToTable("ClienteTransportadora");
                });

            modelBuilder.Entity("Cinrad.Core.Entity.Pedido", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.HasKey("Id");

                    b.ToTable("Pedido");
                });

            modelBuilder.Entity("Cinrad.Core.Entity.Produto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("Codigo");

                    b.Property<Guid>("CodigoCor");

                    b.Property<string>("Descrisao");

                    b.Property<bool>("IsDadosObrigatorio");

                    b.Property<string>("Nome");

                    b.Property<string>("UnidadeMedida");

                    b.Property<string>("UnidadeVenda");

                    b.HasKey("Id");

                    b.ToTable("Produto");
                });

            modelBuilder.Entity("Cinrad.Core.Entity.Transportadora", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasColumnName("Cnpj")
                        .HasMaxLength(14);

                    b.Property<string>("NomeFantasia")
                        .HasColumnName("NomeFantasia")
                        .HasMaxLength(100);

                    b.Property<string>("RazaoSocial")
                        .IsRequired()
                        .HasColumnName("RazaoSocial")
                        .HasMaxLength(100);

                    b.Property<string>("Site")
                        .HasColumnName("Site")
                        .HasMaxLength(100);

                    b.Property<string>("Telefone")
                        .HasColumnName("Telefone")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("Transportadora");
                });

            modelBuilder.Entity("Cinrad.Core.Entity.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnName("Cpf")
                        .HasMaxLength(11);

                    b.Property<string>("Celular")
                        .HasColumnName("Celular")
                        .HasMaxLength(9);

                    b.Property<Guid?>("ClienteId");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("Email")
                        .HasMaxLength(35);

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("Ativo");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("Nome")
                        .HasMaxLength(30);

                    b.Property<string>("Telefone")
                        .HasColumnName("Telefone")
                        .HasMaxLength(8);

                    b.Property<Guid?>("TransportadoraId");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("TransportadoraId");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("Cinrad.Core.Entity.ClienteTransportadora", b =>
                {
                    b.HasOne("Cinrad.Core.Entity.Cliente", "Cliente")
                        .WithMany("ClienteTransportadoras")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Cinrad.Core.Entity.Transportadora", "Transportadora")
                        .WithMany("ClienteTransportadoras")
                        .HasForeignKey("TransportadoraId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Cinrad.Core.Entity.Usuario", b =>
                {
                    b.HasOne("Cinrad.Core.Entity.Cliente", "Cliente")
                        .WithMany("Usuarios")
                        .HasForeignKey("ClienteId");

                    b.HasOne("Cinrad.Core.Entity.Transportadora", "Transportadora")
                        .WithMany("Usuarios")
                        .HasForeignKey("TransportadoraId");
                });
#pragma warning restore 612, 618
        }
    }
}
